<?php
/**
 * Transport.
 *
 * @copyright Michael Ueberschaer (MU)
 * @license http://www.gnu.org/licenses/lgpl.html GNU Lesser General Public License
 * @author Michael Ueberschaer <info@homepages-mit-zikula.de>.
 * @link https://homepages-mit-zikula.de
 * @link http://zikula.org
 * @version Generated by ModuleStudio (https://modulestudio.de).
 */

namespace MU\TransportModule\Container;

use MU\TransportModule\Container\Base\AbstractLinkContainer;

use Zikula\Core\LinkContainer\LinkContainerInterface;

/**
 * This is the link container service implementation class.
 */
class LinkContainer extends AbstractLinkContainer
{
	/**
	 * Returns available header links.
	 *
	 * @param string $type The type to collect links for
	 *
	 * @return array Array of header links
	 */
	/*public function getLinks($type = LinkContainerInterface::TYPE_ADMIN)
	{
        $links = parent::getLinks($type = LinkContainerInterface::TYPE_ADMIN);
        
        $contextArgs = ['api' => 'linkContainer', 'action' => 'getLinks'];
        $allowedObjectTypes = $this->controllerHelper->getObjectTypes('api', $contextArgs);

        $permLevel = LinkContainerInterface::TYPE_ADMIN == $type ? ACCESS_ADMIN : ACCESS_READ;
        $routeArea = LinkContainerInterface::TYPE_ADMIN == $type ? 'admin' : '';
        
        if ($routeArea == 'admin' && $this->permissionApi->hasPermission($this->getBundleName() . '::', '::', ACCESS_ADMIN)) {
        	$links[] = [
        			'url' => $this->router->generate('mutransportmodule_transport_select2databases'),
        			'text' => $this->__('Database select', 'mutransportmodule'),
        			'title' => $this->__('Select 2 databases for transport of datas', 'mutransportmodule'),
        			'icon' => 'wrench'
        	];
        }
        
        return $links;
	}*/
	
	/**
	 * Returns available header links.
	 *
	 * @param string $type The type to collect links for
	 *
	 * @return array Array of header links
	 */
	public function getLinks($type = LinkContainerInterface::TYPE_ADMIN)
	{
		$contextArgs = ['api' => 'linkContainer', 'action' => 'getLinks'];
		$allowedObjectTypes = $this->controllerHelper->getObjectTypes('api', $contextArgs);
	
		$permLevel = LinkContainerInterface::TYPE_ADMIN == $type ? ACCESS_ADMIN : ACCESS_READ;
	
		// Create an array of links to return
		$links = [];
	
		if (LinkContainerInterface::TYPE_ACCOUNT == $type) {
	
			return $links;
		}
	
		$routeArea = LinkContainerInterface::TYPE_ADMIN == $type ? 'admin' : '';
		if (LinkContainerInterface::TYPE_ADMIN == $type) {
		    if ($this->permissionHelper->hasPermission(ACCESS_READ)) {
				$links[] = [
						'url' => $this->router->generate('mutransportmodule_database_index'),
						'text' => $this->__('Frontend', 'mutransportmodule'),
						'title' => $this->__('Switch to user area.', 'mutransportmodule'),
						'icon' => 'home'
				];
			}
		} else {
		    if ($this->permissionHelper->hasPermission(ACCESS_ADMIN)) {
				$links[] = [
						'url' => $this->router->generate('mutransportmodule_database_adminindex'),
						'text' => $this->__('Backend', 'mutransportmodule'),
						'title' => $this->__('Switch to administration area.', 'mutransportmodule'),
						'icon' => 'wrench'
				];
			}
		}
	
		if (in_array('table', $allowedObjectTypes)
		    && $this->permissionHelper->hasComponentPermission('table', $permLevel)) {
					$links[] = [
							'url' => $this->router->generate('mutransportmodule_table_' . $routeArea . 'view'),
							'text' => $this->__('Tables', 'mutransportmodule'),
							'title' => $this->__('Tables list', 'mutransportmodule')
					];
				}
		if (in_array('database', $allowedObjectTypes)
		    && $this->permissionHelper->hasComponentPermission('database', $permLevel)) {
				$links[] = [
					'url' => $this->router->generate('mutransportmodule_database_' . $routeArea . 'view'),
					'text' => $this->__('Databases', 'mutransportmodule'),
					'title' => $this->__('Databases list', 'mutransportmodule')
				];
		}
		if (in_array('field', $allowedObjectTypes)
		    && $this->permissionHelper->hasComponentPermission('field', $permLevel)) {
				$links[] = [
					'url' => $this->router->generate('mutransportmodule_field_' . $routeArea . 'view'),
					'text' => $this->__('Fields', 'mutransportmodule'),
					'title' => $this->__('Fields list', 'mutransportmodule')
				];
		}
		if ($routeArea == 'admin' && $this->permissionHelper->hasPermission(ACCESS_ADMIN)) {
        	$links[] = [
        			'url' => $this->router->generate('mutransportmodule_transport_select2databases'),
        			'text' => $this->__('Database select', 'mutransportmodule'),
        			'title' => $this->__('Select 2 databases for transport of datas', 'mutransportmodule'),
        			'icon' => 'wrench'
        	];
        }
        if ($routeArea == 'admin' && $this->permissionHelper->hasPermission(ACCESS_ADMIN)) {
			$links[] = [
					'url' => $this->router->generate('mutransportmodule_config_config'),
					'text' => $this->__('Configuration', 'mutransportmodule'),
					'title' => $this->__('Manage settings for this application', 'mutransportmodule'),
					'icon' => 'wrench'
			];
		}
		return $links;
	}
}
