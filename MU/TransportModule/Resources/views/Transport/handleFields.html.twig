{# purpose of this template: module configuration page #}
{% extends 'MUTransportModule::adminBase.html.twig' %}
{% block title __('Create the assignment') %}
{% block admin_page_icon 'square' %}
{% block content %}
    <div class="mutransportmodule-database mutransportmodule-edit">
    <div class="col-md-4">
    <h4>{{ source.database.name }} -> {{ source.name }}</h4>
    <ul id="sourcelist">  
    {% for source in sources %}
    {% set color = 'btn-default' %}
    {% if source.fieldType == 'int' %}
        {% set color = 'btn-primary' %}
    {% endif %}
    {% if source.fieldType == 'datetime' %}
        {% set color = 'btn-success' %}
    {% endif %}
    {% if source.fieldType == 'text' %}
        {% set color = 'btn-danger' %}
    {% endif %}
    {% if source.fieldType == 'tinyint' %}
        {% set color = 'btn-info' %}
    {% endif %}
        <li class="btn btn-sm {{ color }}" value="{{source.fieldName}}">
        <p class="listtitle">{{ source.fieldName }}</p>
        <span class="badge">{{ source.fieldType }}</span>
        <span class="badge">{{ source.fieldLength }}</span></li>
    {% endfor %}
    </ul>

    </div>
    <div class="col-md-8">
    <h4>{{ target.database.name }} -> {{ target.name }}</h4>
    <ul id="targetlist">
    {% for target in targets %}
    {% set color = 'btn-default' %}
    {% if target.fieldType == 'int' %}
        {% set color = 'btn-primary' %}
    {% endif %}
    {% if target.fieldType == 'datetime' %}
        {% set color = 'btn-success' %}
    {% endif %}
    {% if target.fieldType == 'text' or target.fieldType == 'longtext' %}
        {% set color = 'btn-danger' %}
    {% endif %}
    {% if target.fieldType == 'tinyint' %}
        {% set color = 'btn-info' %}
    {% endif %}
    <div class="col-md-3 {{ color }} field">
    <div class="btn">
        <span class="target"><p>{{ target.fieldName }}</p>
        <span class="badge">{{ target.fieldType }}</span>
        <span class="badge">{{ target.fieldLength }}</span></span>
    </div> 
    <ul class="listforfields">  
    </ul>
 
    </div>
    {% endfor %}
    </ul>
    </div>
    <br />

        {% form_theme form with [
            '@MUTransportModule/Form/bootstrap_3.html.twig',
            'ZikulaFormExtensionBundle:Form:form_div_layout.html.twig'
        ] %}
        {{ form_start(form, {attr: {id: 'databaseEditForm', class: 'mutransport-edit-form'}}) }}
        {{ form_errors(form) }}        
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                {{ form_widget(form.select) }}
                {{ form_widget(form.cancel) }}
            </div>
        </div>
        {{ form_widget(form.fieldCombination) }}
        {{ form_end(form) }}
  
      {% set formInitScript %}
        <script>
        /* <![CDATA[ */

            
            ( function($) {
                $(document).ready(function() {
  $('.btn > .closebutton').click(function(e) {
      e.preventDefault();
      $(this).prev().fadeOut();  
      }); 
  
  // make sourcelist item draggable
  $('#sourcelist > li').draggable({
    revert: 'invalid'
  });
  // make source list droppable
  $('#sourcelist').droppable({
      accept: ".dropped",
      drop: function(event, ui) {
          ui.helper.attr("style", "position: relative").removeClass('dropped').removeClass('btn-xs').addClass('btn-sm').appendTo($(this));
          // make moved elements draggable
      }
  })
  // make source list sortable
  .sortable().disableSelection();
  
  // make list for fields droppable
  $('.listforfields').droppable({
      accept: ".btn",
      drop: function(event, ui) {
          ui.helper.addClass('dropped').addClass('btn-xs').removeClass('btn-sm').attr("style","").appendTo($(this))
          // verschobenes Element draggable machen
          .draggable({
              revert: 'invalid'
          });
          var fieldvalue = '';
          var fieldSourceValue = '';
          $(".listforfields").each(function() {
              if($(this).has('li').length > 0) {
                  if(fieldvalue == '') {
                      fieldvalue = $(this).parent('.field').find('.target p').text();
                      fieldvalue = fieldvalue + ';';
                      var listitems = $(this).find('li');
                      var count = listitems.length;
                      listitems.each(function(i) {
                              fieldSourceValue = fieldSourceValue + $(this).find('.listtitle').text();
                              if(i < count - 1) {
                                  fieldSourceValue = fieldSourceValue + ',';
                              }
                          })
                      
                      fieldvalue = fieldvalue + fieldSourceValue;
                      fieldSourceValue = '';
                  } else {
                      fieldvalue = fieldvalue + '|' + $(this).parent('.field').find('.target p').text();
                      fieldvalue = fieldvalue + ';';
                      var listitems = $(this).find('li');
                      var count = listitems.length;
                          listitems.each(function(i) {
                              fieldSourceValue = fieldSourceValue + $(this).find('.listtitle').text();
                              if(i < count - 1) {
                                  fieldSourceValue = fieldSourceValue + ',';
                              }
                      })
                      fieldvalue = fieldvalue + fieldSourceValue;
                      fieldSourceValue = '';
                  }
                  $('input[id=mutransportmodule_transport_fieldCombination]').val(fieldvalue);
              }
          })
      }
 
  // make list for fields sortable
  }).sortable({
      connectWidth: "#sourcelist"
  });
  
  // make target list sortable
  $('#targetlist').sortable();

                });
            })(jQuery);
        /* ]]> */
        </script>
    {% endset %}
    {{ pageAddAsset('footer', formInitScript) }}
{% endblock %}
